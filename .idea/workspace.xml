<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="6525fa29-3223-445c-9fb6-72342c0b03ae" name="Changes" comment="New Question&#10;A board game company creates new board games every year. While all the games have different rules, they also are all similar in that they each have a name and a play() method.&#10;&#10;We need to create 3 different games - Monopoly, Chess and Battleships. In the play() method Monopoly should print “Buy all property.”, Battleships - “Sink all ships.”, and Chess - “Kill the enemy king.”&#10;&#10;Complete the code by implementing the getName() and play() methods inherited from abstract Game class.">
      <change afterPath="$PROJECT_DIR$/src/sololearn/CatDogInterface.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/sololearn/Counter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/sololearn/Counter.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="2360961a-182e-4bb5-ac26-0c3393b421d0" />
        <option name="url" value="https://github.com/akmaharana/sololearn.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2SQuCGuIKknjVkmbxhAUb0WZQwz" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/ashit.maharana/IdeaProjects/SoloLearn&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;vcs.Git&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="RockPaperScissor" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.practices.RockPaperScissor" />
      <module name="Practise" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="reference" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="sololearn.reference" />
      <module name="Practise" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="sololearn.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.reference" />
        <item itemvalue="Application.RockPaperScissor" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6525fa29-3223-445c-9fb6-72342c0b03ae" name="Changes" comment="" />
      <created>1689090999331</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689090999331</updated>
    </task>
    <task id="LOCAL-00001" summary="i have updated it for more fun">
      <created>1689830987822</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1689830987822</updated>
    </task>
    <task id="LOCAL-00002" summary="You are the administrator of a hotel and must create customer information cards for your new customers. On the card, you must note the customer’s first and last name, age, and room number. &#10;&#10;The program you are given takes a guest's data (first name, last name, age, and room number) as input.&#10;&#10;Complete the class by adding corresponding attributes so that the saveCustomerInfo() method works correctly. Also assign taken data values to attributes of created object.">
      <created>1689918880882</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1689918880882</updated>
    </task>
    <task id="LOCAL-00003" summary="You are the administrator of a hotel and must create customer information cards for your new customers. On the card, you must note the customer’s first and last name, age, and room number. &#10;&#10;The program you are given takes a guest's data (first name, last name, age, and room number) as input.&#10;&#10;Complete the class by adding corresponding attributes so that the saveCustomerInfo() method works correctly. Also assign taken data values to attributes of created object.">
      <created>1689919447290</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1689919447290</updated>
    </task>
    <task id="LOCAL-00004" summary="new constructor">
      <created>1689928985300</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1689928985300</updated>
    </task>
    <task id="LOCAL-00005" summary="hotel ticket">
      <created>1689929173772</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1689929173772</updated>
    </task>
    <task id="LOCAL-00006" summary="hotel customer question">
      <created>1689929267318</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1689929267318</updated>
    </task>
    <task id="LOCAL-00007" summary="counter">
      <created>1689930338350</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1689930338350</updated>
    </task>
    <task id="LOCAL-00008" summary="New Question&#10;A board game company creates new board games every year. While all the games have different rules, they also are all similar in that they each have a name and a play() method.&#10;&#10;We need to create 3 different games - Monopoly, Chess and Battleships. In the play() method Monopoly should print “Buy all property.”, Battleships - “Sink all ships.”, and Chess - “Kill the enemy king.”&#10;&#10;Complete the code by implementing the getName() and play() methods inherited from abstract Game class.">
      <created>1690113112508</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1690113112508</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="UpdateCopyrightCheckinHandler">
    <option name="UPDATE_COPYRIGHT" value="true" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="i have updated it for more fun" />
    <MESSAGE value="You are the administrator of a hotel and must create customer information cards for your new customers. On the card, you must note the customer’s first and last name, age, and room number. &#10;&#10;The program you are given takes a guest's data (first name, last name, age, and room number) as input.&#10;&#10;Complete the class by adding corresponding attributes so that the saveCustomerInfo() method works correctly. Also assign taken data values to attributes of created object." />
    <MESSAGE value="new constructor" />
    <MESSAGE value="hotel ticket" />
    <MESSAGE value="hotel customer question" />
    <MESSAGE value="counter" />
    <MESSAGE value="New Question&#10;A board game company creates new board games every year. While all the games have different rules, they also are all similar in that they each have a name and a play() method.&#10;&#10;We need to create 3 different games - Monopoly, Chess and Battleships. In the play() method Monopoly should print “Buy all property.”, Battleships - “Sink all ships.”, and Chess - “Kill the enemy king.”&#10;&#10;Complete the code by implementing the getName() and play() methods inherited from abstract Game class." />
    <option name="LAST_COMMIT_MESSAGE" value="New Question&#10;A board game company creates new board games every year. While all the games have different rules, they also are all similar in that they each have a name and a play() method.&#10;&#10;We need to create 3 different games - Monopoly, Chess and Battleships. In the play() method Monopoly should print “Buy all property.”, Battleships - “Sink all ships.”, and Chess - “Kill the enemy king.”&#10;&#10;Complete the code by implementing the getName() and play() methods inherited from abstract Game class." />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
</project>